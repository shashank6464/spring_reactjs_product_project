<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.5</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.SpringBootReactive.MongoDB.React</groupId>
	<artifactId>Products</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>Products</name>
	<description>full stack application </description>
	<properties>
		<java.version>17</java.version>
	</properties>
	<dependencies><!--	The spring-boot-starter-data-mongodb-reactive is a Spring Boot starter for using
		MongoDB document-oriented database and Spring Data MongoDB Reactive.
		In the application. properties , we turn off the Spring Boot banner and set the logging properties.-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb-reactive</artifactId>
		</dependency>

		<!--Spring WebFlux is a web framework that's built on top of Project Reactor,
		to give you asynchronous I/O, and allow your application to perform better.
		If you're familiar with Spring MVC and building REST APIs, you'll enjoy Spring WebFlux.-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!--Embedded MongoDB will provide a platform neutral way for running mongodb in unittests.-->
		<dependency>
			<groupId>de.flapdoodle.embed</groupId>
			<artifactId>de.flapdoodle.embed.mongo</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!--	JUnit Jupiter is the combination of the programming model and extension model for
            writing tests and extensions in JUnit 5. The Jupiter sub-project provides a
            TestEngine for running Jupiter based tests on the platform.-->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>5.8.2</version>
			<scope>test</scope>
		</dependency>
		<!--Mockito allows us to create and configure mock objects. Using Mockito simplifies
		the development of tests for classes with external dependencies significantly.
		We can create the mock objects manually or can use the mocking framewors like Mockito-->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>4.5.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>5.8.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<!--SpringDoc OpenAPI WebFlux Core-->
		<!-- https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-webflux-core -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-webflux-core</artifactId>
			<version>1.6.12</version>
		</dependency>
		<!--SpringDoc OpenAPI WebFlux UI-->
		<!-- https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-webflux-ui -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-webflux-ui</artifactId>
			<version>1.6.12</version>
		</dependency>
		<!--JUnit Jupiter is the API for writing tests using JUnit 5.-->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>4.5.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>5.8.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
